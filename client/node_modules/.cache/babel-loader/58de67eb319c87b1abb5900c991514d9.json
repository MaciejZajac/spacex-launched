{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/maciek/Desktop/space-x-graphql-app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/maciek/Desktop/space-x-graphql-app/client/src/components/Launch.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query LaunchQuery($flight_number: Int!) {\\n        launch(flight_number: $flight_number) {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_success\\n            launch_date_local\\n            rocket {\\n                rocket_id\\n                rocket_name\\n                rocket_type\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nconst LAUNCH_QUERY = gql(_templateObject());\nexport default class Launch extends React.Component {\n  render() {\n    let flight_number = this.props.match.params.flight_number;\n    console.log(flight_number);\n    flight_number = parseInt(flight_number);\n    return React.createElement(React.Fragment, null, React.createElement(Query, {\n      query: LAUNCH_QUERY,\n      variables: {\n        flight_number\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) console.log(\"error\");\n      const _data$launch = data.launch,\n            mission_name = _data$launch.mission_name,\n            flight_number = _data$launch.flight_number,\n            launch_year = _data$launch.launch_year,\n            launch_success = _data$launch.launch_success,\n            _data$launch$rocket = _data$launch.rocket,\n            rocket_id = _data$launch$rocket.rocket_id,\n            rocket_name = _data$launch$rocket.rocket_name,\n            rocket_type = _data$launch$rocket.rocket_type;\n      console.log(data);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Mission: \"), mission_name), React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Launch Details\"), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Flight Number: \", flight_number), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Launch Year: \", launch_year), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Launch Success:\", \" \", React.createElement(\"span\", {\n        className: classNames({\n          \"text-success\": launch_success,\n          \"text-danger\": !launch_success\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, launch_success ? \"yes\" : \"no\"))), React.createElement(\"h4\", {\n        className: \"my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Rocket Details\"), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Rocket ID: \", rocket_id), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Rocket Name: \", rocket_name), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Rocket Type: \", rocket_type)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/maciek/Desktop/space-x-graphql-app/client/src/components/Launch.js"],"names":["React","gql","Query","Link","classNames","LAUNCH_QUERY","Launch","Component","render","flight_number","props","match","params","console","log","parseInt","loading","error","data","launch","mission_name","launch_year","launch_success","rocket","rocket_id","rocket_name","rocket_type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport default class Launch extends React.Component {\n    render() {\n        let { flight_number } = this.props.match.params;\n        console.log(flight_number);\n        flight_number = parseInt(flight_number);\n\n        return (\n            <>\n                <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n                    {({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(\"error\");\n\n                        const {\n                            mission_name,\n                            flight_number,\n                            launch_year,\n                            launch_success,\n                            rocket: { rocket_id, rocket_name, rocket_type }\n                        } = data.launch;\n                        console.log(data);\n                        return (\n                            <div>\n                                <h1 className='display-4 my-3'>\n                                    <span className='text-dark'>Mission: </span>\n                                    {mission_name}\n                                </h1>\n                                <h4 className='mb-3'>Launch Details</h4>\n                                <ul className='list-group'>\n                                    <li className='list-group-item'>Flight Number: {flight_number}</li>\n                                    <li className='list-group-item'>Launch Year: {launch_year}</li>\n                                    <li className='list-group-item'>\n                                        Launch Success:{\" \"}\n                                        <span\n                                            className={classNames({\n                                                \"text-success\": launch_success,\n                                                \"text-danger\": !launch_success\n                                            })}\n                                        >\n                                            {launch_success ? \"yes\" : \"no\"}\n                                        </span>\n                                    </li>\n                                </ul>\n                                <h4 className='my-3'>Rocket Details</h4>\n                                <ul className='list-group'>\n                                    <li className='list-group-item'>Rocket ID: {rocket_id}</li>\n                                    <li className='list-group-item'>Rocket Name: {rocket_name}</li>\n                                    <li className='list-group-item'>Rocket Type: {rocket_type}</li>\n                                </ul>\n                                <hr />\n                                <Link to='/' className='btn btn-secondary' />\n                            </div>\n                        );\n                    }}\n                </Query>\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}