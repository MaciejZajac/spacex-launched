{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/maciek/Desktop/space-x-graphql-app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/maciek/Desktop/space-x-graphql-app/client/src/components/Launch.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query LaunchQuery($flight_number: Int!) {\\n        launch(flight_number: $flight_number) {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_success\\n            launch_date_local\\n            rocket {\\n                rocket_id\\n                rocket_name\\n                rocket_type\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nconst LAUNCH_QUERY = gql(_templateObject());\nexport default function Launch(props) {\n  let flight_number = props.match.params.flight_number;\n  flight_number = parseInt(flight_number);\n  return React.createElement(React.Fragment, null, React.createElement(Query, {\n    query: LAUNCH_QUERY,\n    variables: {\n      flight_number\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) console.log(\"error\");\n    console.log(data);\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Test\");\n  }));\n}","map":{"version":3,"sources":["/Users/maciek/Desktop/space-x-graphql-app/client/src/components/Launch.js"],"names":["React","gql","Query","Link","classNames","LAUNCH_QUERY","Launch","props","flight_number","match","params","parseInt","loading","error","data","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,YAAY,GAAGJ,GAAH,mBAAlB;AAiBA,eAAe,SAASK,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,MAC5BC,aAD4B,GACVD,KAAK,CAACE,KAAN,CAAYC,MADF,CAC5BF,aAD4B;AAElCA,EAAAA,aAAa,GAAGG,QAAQ,CAACH,aAAD,CAAxB;AACA,SACI,0CACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,YAAd;AAA4B,IAAA,SAAS,EAAE;AAAEG,MAAAA;AAAF,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC3B,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAWE,OAAO,CAACC,GAAR,CAAY,OAAZ;AACXD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,GANL,CADJ,CADJ;AAYH","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport default function Launch(props) {\n    let { flight_number } = props.match.params;\n    flight_number = parseInt(flight_number);\n    return (\n        <>\n            <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading...</h4>;\n                    if (error) console.log(\"error\");\n                    console.log(data);\n                    return <h1>Test</h1>;\n                }}\n            </Query>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}