{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/maciek/Desktop/space-x-graphql-app/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/maciek/Desktop/space-x-graphql-app/client/src/components/Launch.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query LaunchQuery($flight_number: Int!) {\\n        launch(flight_number: $flight_number) {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_success\\n            launch_date_local\\n            rocket {\\n                rocket_id\\n                rocket_name\\n                rocket_type\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nconst LAUNCH_QUERY = gql(_templateObject());\nexport default class Launch extends React.Component {\n  render() {\n    let flight_number = this.props.match.params.flight_number;\n    flight_number = parseInt(flight_number);\n    console.log(flight_number);\n    return React.createElement(React.Fragment, null, React.createElement(Query, {\n      query: LAUNCH_QUERY,\n      variables: {\n        flight_number\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) console.log(\"error\");\n      console.log(data);\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Test\");\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/maciek/Desktop/space-x-graphql-app/client/src/components/Launch.js"],"names":["React","gql","Query","Link","classNames","LAUNCH_QUERY","Launch","Component","render","flight_number","props","match","params","parseInt","console","log","loading","error","data"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,YAAY,GAAGJ,GAAH,mBAAlB;AAiBA,eAAe,MAAMK,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAChDC,EAAAA,MAAM,GAAG;AAAA,QACCC,aADD,GACmB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADpC,CACCH,aADD;AAELA,IAAAA,aAAa,GAAGI,QAAQ,CAACJ,aAAD,CAAxB;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,WACI,0CACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ,YAAd;AAA4B,MAAA,SAAS,EAAE;AAAEI,QAAAA;AAAF,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEO,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC3B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAIC,KAAJ,EAAWH,OAAO,CAACC,GAAR,CAAY,OAAZ;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,KANL,CADJ,CADJ;AAYH;;AAlB+C","sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport default class Launch extends React.Component {\n    render() {\n        let { flight_number } = this.props.match.params;\n        flight_number = parseInt(flight_number);\n\n        console.log(flight_number);\n        return (\n            <>\n                <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n                    {({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(\"error\");\n                        console.log(data);\n                        return <h1>Test</h1>;\n                    }}\n                </Query>\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}